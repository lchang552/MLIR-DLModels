Unranked Memref base@ = 0x55a99c76fd00 rank = 2 offset = 0 sizes = [4, 3] strides = [3, 1] data = 
[[0,   1,   2], 
 [0,   1,   2], 
 [0,   1,   2], 
 [0,   1,   2]]
Unranked Memref base@ = 0x55d4a5ef7600 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[0,   1,   2], 
 [3,   4,   5], 
 [6,   7,   8]]
Unranked Memref base@ = 0x563160c48700 rank = 2 offset = 0 sizes = [1, 1000] strides = [1000, 1] data = 
[[0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001,   0.001]]
Unranked Memref base@ = 0x558a93127080 rank = 1 offset = 0 sizes = [3] strides = [1] data = 
[4,  4,  4]
Unranked Memref base@ = 0x55992a91d080 rank = 2 offset = 0 sizes = [6, 5] strides = [5, 1] data = 
[[0,   0,   2.59118e-13,   3.07067e-41,   2.59104e-13], 
 [3.07067e-41,   2.5909e-13,   3.07067e-41,   2.59077e-13,   3.07067e-41], 
 [2.59063e-13,   1,   2,   3,   2.5902e-13], 
 [3.07067e-41,   4,   5,   6,   0], 
 [2.58989e-13,   3.07067e-41,   2.58975e-13,   3.07067e-41,   2.58941e-13], 
 [3.07067e-41,   2.58929e-13,   3.07067e-41,   2.58918e-13,   3.07067e-41]]
Unranked Memref base@ = 0x562deb832f80 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[2,   4100,   6], 
 [16777224,   10,   4294971404], 
 [16777230,   1103806595088,   1099511627794]]
Unranked Memref base@ = 0x55c4fce44d80 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[2,   4,   6], 
 [8,   10,   12], 
 [14,   16,   18]]
Unranked Memref base@ = 0x55bad80a8400 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[0,   0,   2], 
 [0,   2,   4], 
 [2,   0,   8]]
Unranked Memref base@ = 0x5560808b9e00 rank = 3 offset = 0 sizes = [1, 3, 4] strides = [12, 4, 1] data = 
[[[0,    1,    2,    3], 
  [4,    5,    6,    7], 
  [8,    9,    10,    11]]]
Unranked Memref base@ = 0x55946b41c100 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[40,   43,   46], 
 [56,   60,   64], 
 [118,   127,   136]]
Unranked Memref base@ = 0x5623826a9700 rank = 2 offset = 0 sizes = [1, 1000] strides = [1000, 1] data = 

Unranked Memref base@ = 0x55cb04d94a80 rank = 2 offset = 0 sizes = [3, 4] strides = [4, 1] data = 
[[0,   1,   2,   3], 
 [4,   5,   6,   7], 
 [8,   9,   10,   11]]
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.BroadcastNumpy3.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.BitAndScalar.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/resnet-50-linalg.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMV_INT64.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.ExplicitPadding.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.Add.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.SimpleAdd.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.EltwiseMod.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.Unsqueeze.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMM_UINT64.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/mobilenetv3-linalg.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.Squeeze.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
Unranked Memref base@ = 0x56114e4aa400 rank = 1 offset = 0 sizes = [3] strides = [1] data = 
[4,  4,  4]
Unranked Memref base@ = 0x55ae5a8cfd80 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[0,   2,   0], 
 [4,   4,   6], 
 [0,   0,   0]]
Unranked Memref base@ = 0x5593c7a18a00 rank = 1 offset = 0 sizes = [3] strides = [1] data = 
[0,  1,  2]
Unranked Memref base@ = 0x563eb55b4380 rank = 1 offset = 0 sizes = [3] strides = [1] data = 
[19,  19,  19]
Unranked Memref base@ = 0x56324a83cf80 rank = 4 offset = 0 sizes = [1, 4, 3, 3] strides = [36, 9, 3, 1] data = 
[[[[0,     1,     2], 
   [0,     1,     2], 
   [0,     1,     2]], 
  [[0,     1,     2], 
   [0,     1,     2], 
   [0,     1,     2]], 
  [[0,     1,     2], 
   [0,     1,     2], 
   [0,     1,     2]], 
  [[0,     1,     2], 
   [0,     1,     2], 
   [0,     1,     2]]]]
Unranked Memref base@ = 0x5639b65f4480 rank = 2 offset = 0 sizes = [6, 5] strides = [5, 1] data = 
[[2.86991e+32,   1.80563e+28,   9.25473e+18,   4.62343e+30,   1.70328e+25], 
 [1.34627e+28,   5.2172e-11,   1.2125e-11,   4.15891e+21,   3.44646e+30], 
 [5.12554e-11,   -1,   -2,   -3,   2.72546e+20], 
 [1.67458e+19,   -4,   -5,   -6,   4.23211e+21], 
 [1.76574e+22,   9.31429e-39,   6.77208e+22,   1.09009e+27,   9.13168e-39], 
 [4.84183e+30,   9.03484e-39,   4.82506e+27,   9.03484e-39,   1.7668e+22]]
Unranked Memref base@ = 0x55c2374fae00 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[14.1,   14.8,   14.6], 
 [11,   13,   10.5], 
 [13.9,   19.9,   12.4]]
Unranked Memref base@ = 0x558ba8bbc300 rank = 2 offset = 0 sizes = [3, 4] strides = [4, 1] data = 
[[1,   1,   1,   1], 
 [0,   0,   1,   1], 
 [0,   0,   0,   0]]
Unranked Memref base@ = 0x560418930000 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[412537584,   22020,   410087440], 
 [22020,   60,   64], 
 [118,   127,   136]]
Unranked Memref base@ = 0x55e8c3f5fb80 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[11,   11,   15], 
 [13,   15,   15], 
 [23,   25,   27]]
Unranked Memref base@ = 0x5558bc05f400 rank = 1 offset = 0 sizes = [3] strides = [1] data = 
[-5,  6,  9]
Unranked Memref base@ = 0x55c767a1db00 rank = 2 offset = 0 sizes = [3, 4] strides = [4, 1] data = 
[[0,   1,   2,   3], 
 [0,   1,   2,   3], 
 [0,   1,   2,   3]]
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMV_UINT64.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.BitAnd.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.BroadcastNoOp.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMVC_INT64.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.BroadcastNumpy.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.ExplicitPaddingInf.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMM_FLOAT32.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.BroadcastCmp.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMM_INT32.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.BitOr.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.Max.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.BroadcastNoOpLarge.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
Unranked Memref base@ = 0x55bfe45c0c80 rank = 2 offset = 0 sizes = [6, 5] strides = [5, 1] data = 
[[-1.62368e+22,   3.07599e-41,   1.4013e-45,   8.40779e-45,   0], 
 [0,   0,   0,   0,   0], 
 [0,   1,   2,   3,   0], 
 [0,   4,   5,   6,   3.07599e-41], 
 [1.4013e-45,   8.40779e-45,   0,   0,   0], 
 [0,   0,   0,   0,   0]]
Unranked Memref base@ = 0x55d9e4ee8700 rank = 2 offset = 0 sizes = [2, 3] strides = [3, 1] data = 
[[1,   2,   3], 
 [4,   5,   6]]
Unranked Memref base@ = 0x5569d6904e00 rank = 2 offset = 0 sizes = [3, 4] strides = [4, 1] data = 
[[0,   0,   0,   0], 
 [1,   1,   1,   1], 
 [2,   2,   2,   2]]
Unranked Memref base@ = 0x55ceffe2f280 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[1,   2,   3], 
 [4,   5,   6], 
 [7,   8,   9]]
Unranked Memref base@ = 0x55f041062d80 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[1,   9,   3], 
 [-1,   -7,   0], 
 [1,   0,   -7]]
Unranked Memref base@ = 0x558d71d28a00 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[2,   8,   24], 
 [64,   160,   384], 
 [896,   2048,   4608]]
Unranked Memref base@ = 0x55eff9d27380 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[40,   43,   46], 
 [56,   60,   64], 
 [118,   127,   136]]
Unranked Memref base@ = 0x55b824ff6500 rank = 0 offset = 0 sizes = [] strides = [] data = 
[2]
Unranked Memref base@ = 0x55b6ce65c300 rank = 2 offset = 0 sizes = [3, 4] strides = [4, 1] data = 
[[0,   0,   0,   0], 
 [1,   1,   1,   1], 
 [2,   2,   2,   2]]
Unranked Memref base@ = 0x56100b3b1180 rank = 1 offset = 0 sizes = [3] strides = [1] data = 
[4,  4,  4]
Unranked Memref base@ = 0x55c3b6754780 rank = 1 offset = 0 sizes = [3] strides = [1] data = 
[3.5,  4,  3.6]
Unranked Memref base@ = 0x55f6cd810880 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[4,   5,   6], 
 [7,   8,   9], 
 [10,   11,   12]]
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.ExplicitPaddingNegInf.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.ExplicitPaddingNoOp.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.BroadcastNonNumpy.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.ReshapeFold.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.Floor.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.BitRightScalar.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMM_INT64.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.ReshapeIntoScalar.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/OpTest.BroadcastNumpy2.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMV_INT32.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/ExampleCppEdsl.GEMV_FLOAT32.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.HigherPrecisionConstants.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
Unranked Memref base@ = 0x55d43adc5a80 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[1,   2,   3], 
 [4,   5,   6], 
 [7,   8,   9]]
Unranked Memref base@ = 0x55a53cc8fc00 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[94168177768928,   94168175833104,   12288], 
 [32768,   81920,   196608], 
 [458752,   1048576,   2359296]]
Unranked Memref base@ = 0x5647c369c500 rank = 2 offset = 0 sizes = [3, 3] strides = [3, 1] data = 
[[94866221861632,   94866219946000,   15], 
 [9,   11,   9], 
 [23,   25,   27]]
Unranked Memref base@ = 0x5573654b4e00 rank = 1 offset = 0 sizes = [6] strides = [1] data = 
[1,  0.5,  0.25,  0.2,  0.125,  0.1]
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.BitRightTensor.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.BitLeft.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.BitXor.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
/data/lchang1/mlir-llvm/bin/mlir-opt /data/lchang1/MLIR-DLModels/test/CppEdsl.Reciprocal.mlir -convert-tensor-to-linalg -linalg-bufferize -arith-bufferize  -tensor-bufferize -func-bufferize -buffer-deallocation -convert-linalg-to-loops -convert-scf-to-cf  -convert-linalg-to-llvm -lower-affine -convert-scf-to-cf --convert-memref-to-llvm -convert-func-to-llvm -reconcile-unrealized-casts --arith-expand --convert-arith-to-llvm --convert-math-to-llvm -finalizing-bufferize | /data/lchang1/mlir-llvm/bin/mlir-cpu-runner --entry-point-result=void -shared-libs=/data/lchang1/mlir-llvm/lib/libmlir_c_runner_utils.so,/data/lchang1/mlir-llvm/lib/libmlir_runner_utils.so
